diff '--color=auto' -Naur linux_old/sound/soc/ti/davinci-mcasp.c linux/sound/soc/ti/davinci-mcasp.c
--- linux_old/sound/soc/ti/davinci-mcasp.c	2019-10-22 09:42:50.010904778 +0200
+++ linux/sound/soc/ti/davinci-mcasp.c	2019-10-22 13:03:28.819713138 +0200
@@ -836,13 +836,13 @@
 }
 
 static int mcasp_common_hw_param(struct davinci_mcasp *mcasp, int stream,
-				 int period_words, int channels)
+				 int period_words, int channels, bool dsd_mode)
 {
 	struct snd_dmaengine_dai_dma_data *dma_data = &mcasp->dma_data[stream];
 	int i;
 	u8 tx_ser = 0;
 	u8 rx_ser = 0;
-	u8 slots = mcasp->tdm_slots;
+	u8 slots = dsd_mode ? 1 : mcasp->tdm_slots;
 	u8 max_active_serializers = (channels + slots - 1) / slots;
 	u8 max_rx_serializers, max_tx_serializers;
 	int active_serializers, numevt;
@@ -960,13 +960,14 @@
 }
 
 static int mcasp_i2s_hw_param(struct davinci_mcasp *mcasp, int stream,
-			      int channels)
+			      int channels, bool dsd_mode)
 {
 	int i, active_slots;
 	int total_slots;
 	int active_serializers;
 	u32 mask = 0;
 	u32 busel = 0;
+	u32 mod;
 
 	total_slots = mcasp->tdm_slots;
 
@@ -1005,11 +1006,19 @@
 	if (!mcasp->dat_port)
 		busel = TXSEL;
 
+	if (dsd_mode) {
+		mask = 1;
+		busel = 0;
+		mod = 0;
+	} else {
+		mod = total_slots;
+	}
+
 	if (stream == SNDRV_PCM_STREAM_PLAYBACK) {
 		mcasp_set_reg(mcasp, DAVINCI_MCASP_TXTDM_REG, mask);
 		mcasp_set_bits(mcasp, DAVINCI_MCASP_TXFMT_REG, busel | TXORD);
 		mcasp_mod_bits(mcasp, DAVINCI_MCASP_TXFMCTL_REG,
-			       FSXMOD(total_slots), FSXMOD(0x1FF));
+			       FSXMOD(mod), FSXMOD(0x1FF));
 	} else if (stream == SNDRV_PCM_STREAM_CAPTURE) {
 		mcasp_set_reg(mcasp, DAVINCI_MCASP_RXTDM_REG, mask);
 		mcasp_set_bits(mcasp, DAVINCI_MCASP_RXFMT_REG, busel | RXORD);
@@ -1022,7 +1031,7 @@
 		 */
 		if (mcasp_is_synchronous(mcasp) && !mcasp->channels)
 			mcasp_mod_bits(mcasp, DAVINCI_MCASP_TXFMCTL_REG,
-				       FSXMOD(total_slots), FSXMOD(0x1FF));
+				       FSXMOD(mod), FSXMOD(0x1FF));
 	}
 
 	return 0;
@@ -1185,12 +1194,28 @@
 	return fifo_use / substream->runtime->channels;
 }
 
+static int is_dsd(snd_pcm_format_t format)
+{
+	switch (format) {
+		case SNDRV_PCM_FORMAT_DSD_U8:
+		case SNDRV_PCM_FORMAT_DSD_U16_LE:
+		case SNDRV_PCM_FORMAT_DSD_U32_LE:
+			return 1;
+			break;
+
+		default:
+			return 0;
+			break;
+	}
+}
+
 static int davinci_mcasp_hw_params(struct snd_pcm_substream *substream,
 					struct snd_pcm_hw_params *params,
 					struct snd_soc_dai *cpu_dai)
 {
 	struct davinci_mcasp *mcasp = snd_soc_dai_get_drvdata(cpu_dai);
 	int word_length;
+	bool dsd_mode = is_dsd(params_format(params));
 	int channels = params_channels(params);
 	int period_size = params_period_size(params);
 	int ret;
@@ -1198,11 +1223,13 @@
 	switch (params_format(params)) {
 	case SNDRV_PCM_FORMAT_U8:
 	case SNDRV_PCM_FORMAT_S8:
+	case SNDRV_PCM_FORMAT_DSD_U8:
 		word_length = 8;
 		break;
 
 	case SNDRV_PCM_FORMAT_U16_LE:
 	case SNDRV_PCM_FORMAT_S16_LE:
+	case SNDRV_PCM_FORMAT_DSD_U16_LE:
 		word_length = 16;
 		break;
 
@@ -1218,6 +1245,7 @@
 
 	case SNDRV_PCM_FORMAT_U32_LE:
 	case SNDRV_PCM_FORMAT_S32_LE:
+	case SNDRV_PCM_FORMAT_DSD_U32_LE:
 		word_length = 32;
 		break;
 
@@ -1247,7 +1275,7 @@
 	}
 
 	ret = mcasp_common_hw_param(mcasp, substream->stream,
-				    period_size * channels, channels);
+				    period_size * channels, channels, dsd_mode);
 	if (ret)
 		return ret;
 
@@ -1255,7 +1283,7 @@
 		ret = mcasp_dit_hw_param(mcasp, params_rate(params));
 	else
 		ret = mcasp_i2s_hw_param(mcasp, substream->stream,
-					 channels);
+					 channels, dsd_mode);
 
 	if (ret)
 		return ret;
@@ -1342,7 +1370,7 @@
 
 static const unsigned int davinci_mcasp_dai_rates[] = {
 	8000, 11025, 16000, 22050, 32000, 44100, 48000, 64000,
-	88200, 96000, 176400, 192000,
+	88200, 96000, 176400, 192000, 352800, 384000
 };
 
 #define DAVINCI_MAX_RATE_ERROR_PPM 1000
@@ -1609,7 +1637,7 @@
 	return 0;
 }
 
-#define DAVINCI_MCASP_RATES	SNDRV_PCM_RATE_8000_192000
+#define DAVINCI_MCASP_RATES	SNDRV_PCM_RATE_KNOT
 
 #define DAVINCI_MCASP_PCM_FMTS (SNDRV_PCM_FMTBIT_S8 | \
 				SNDRV_PCM_FMTBIT_U8 | \
@@ -1620,7 +1648,10 @@
 				SNDRV_PCM_FMTBIT_S24_3LE | \
 				SNDRV_PCM_FMTBIT_U24_3LE | \
 				SNDRV_PCM_FMTBIT_S32_LE | \
-				SNDRV_PCM_FMTBIT_U32_LE)
+				SNDRV_PCM_FMTBIT_U32_LE | \
+				SNDRV_PCM_FMTBIT_DSD_U8 | \
+				SNDRV_PCM_FMTBIT_DSD_U16_LE | \
+				SNDRV_PCM_FMTBIT_DSD_U32_LE)
 
 static struct snd_soc_dai_driver davinci_mcasp_dai[] = {
 	{
